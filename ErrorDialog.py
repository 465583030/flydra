"""ErrorDialog -- Display an exception and optionally a traceback in a dialog.

Copyright 2002-2003 Timothy Hochberg
"""


import sys
import traceback
import wx
from cStringIO import StringIO


warning_data = (
'GIF89a \x00 \x00\xf7\x00\x00\x00\x00\x00\x84\x82\x00\x84\x82\x84\xc6\xc3\xc6\xff\x00\xff\xff\xff\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00!\xf9\x04\x01\x00\x00\x04\x00,\x00\x00\x00\x00 \x00 \x00\x00\x08'
'\xd8\x00\t\x08\x1cHp`\x80\x83\x05\x13*\\(0@\x81\x02\x03\x000\x9c\xa8\xd0\xe1C\x88\x00\x04P\xdc'
'H\xc0\xe2\xc5\x8c\x1a9.\xf4x1\xa2\x80\x90"\x0b\x92\xfcx2\xa5\xca\x8b01\xb6t\xd90&L\x90'
'4;\xda\x84i\x12\xa5H\x8f\x11\x01\x00\x18\xc0\xd2\xe7F\x92B\x93\x96\xc4\xf9\xf3fR\x007g\x1e\x8d\xf9'
'\x14\xeaR\xa9\x13WV\xa5\x8au\xa4\xcd\xad<\x992\\Y @R\xb2b+\xee\x0c:\xd4f\xcf\xb1;'
'\x0b(\xdd\x99\x96 \xd9\x8bf\xef\xca4Z3nD\xa2q\xeb\xea\x8c\xfb\xd0\xaa\xdf\xbaz\t\x7f\xc5\x9a\xf8'
'aP\xc0k\xc56\x96;7\xf0\xcc\xc9\x94\x85*~\x8b\xf9\xb1b\xb9-1\x7f\x8ezR\xf4\xe8\xbd\x1aM'
'o\x06y\xb9\xaa\xeb\xd7\xaeO\xca&(\xbb\xb6\xed\xdb\xb8\xbb\x12\xc8\xcd;\xb7\xc0\x80\x00;'
)


wx.InitAllImageHandlers()


class ErrorDialog(wx.Dialog):
    """Dialog showing an exception and optionally tracebacks in a dialog.

    Simply pass and exception object to the ErrorDialog when creating it
    and it does the rest.
    
    >>> from guitest import PauseTests
    >>> app = wx.PySimpleApp()
    >>> try:
    ...     1/0
    ... except StandardError, err:
    ...     dlg = ErrorDialog(None, -1, err)
    ...     didit = dlg.Show()
    ...     PauseTests()
    ...     didit = dlg.Destroy()
    
    Note that you can expicitly supply the traceback, by setting the value of
    exc_stack on the error object. You should not normally need to do this.
    
    """

    def __init__(self, parent, id, error):
        err_name = error.__class__.__name__
        wx.Dialog.__init__(self, parent, id, err_name)
        self.vsizer = vsizer = wx.BoxSizer(wx.VERTICAL)
        # First row
        hsizer = wx.BoxSizer(wx.HORIZONTAL)
        vsizer.Add(hsizer)
        bitmap = wx.BitmapFromImage( wx.ImageFromStream( StringIO(warning_data) ) )
        hsizer.Add(wx.StaticBitmap(self, -1, bitmap), 0, wx.ALL, 5)
        err_txt = "%s: %s" % (err_name, error)
        hsizer.Add(wx.StaticText(self, -1, err_txt), 1, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        # Second row
        hsizer = wx.BoxSizer(wx.HORIZONTAL)
        vsizer.Add(hsizer)
        ok_btn = wx.Button(self, -1, "OK")
        hsizer.Add(ok_btn, 0, wx.ALL, 5)
        #hsizer.Add(200,1)
        self.details_btn = details_btn = wx.Button(self, -1, "Details >>")
        hsizer.Add(details_btn, 1, wx.ALL | wx.ALIGN_RIGHT, 5)
        # Third, sometimes invisible layer.
        if hasattr(error, 'exc_stack'):
            exc_stack = error.exc_stack
        else:
            exc_stack = traceback.extract_tb(sys.exc_info()[2])
        self.tb = tb = ''.join(traceback.format_list(exc_stack))
        self.tb_txt = tb_txt = wx.TextCtrl(self, -1, tb, style=wx.TE_MULTILINE|wx.HSCROLL|wx.TE_READONLY )
        vsizer.Add(tb_txt, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 5)
        # Layout
        self.SetAutoLayout(True)
        self.SetSizer(vsizer)
        vsizer.Fit(self)
        vsizer.SetSizeHints(self)
        wx.EVT_BUTTON(ok_btn, ok_btn.GetId(), self.OnOk)
        wx.EVT_BUTTON(details_btn, details_btn.GetId(), self.OnDetails)
        if tb.strip() == "None":
            details_btn.Enable(0)
        self.OnDetails(None)

    def OnOk(self, event):
        self.Close()

    def OnDetails(self, event):
        if self.tb_txt.IsShown():            
            self.details_btn.SetLabel("<<< Details")
            self.tb_txt.Show(0)
            self.vsizer.Remove(self.tb_txt)
        else:
            self.tb_txt.Show(1)
            self.vsizer.Add(self.tb_txt, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 5)
            self.details_btn.SetLabel("Details >>>")
        self.vsizer.Layout()
        self.vsizer.Fit(self)


def _showErrorDialog(err, target):
    dlg = ErrorDialog(None, -1, err)
    dlg.ShowModal()
    dlg.Destroy()
    
    
def ShowErrorDialog(err, target=None):
    if not hasattr(err, 'exc_stack'):
         err.exc_stack = traceback.extract_tb(sys.exc_info()[2])
         print >> sys.stderr, err.__class__,': ',str(err)
         traceback.print_tb(sys.exc_info()[2])
    wx.CallAfter(_showErrorDialog, err, target)


def test():
    print 'a'
    app = wx.PySimpleApp()
    print 'b'
    try:
        print 'c'
        1/0
        print 'd'
    except Exception, err:
        ShowErrorDialog(err)



if __name__ == "__main__":
    test()
