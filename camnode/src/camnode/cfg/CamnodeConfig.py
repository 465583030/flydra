## *********************************************************
## 
## File autogenerated for the camnode package 
## by the dynamic_reconfigure package.
## Please do not edit.
## 
## ********************************************************/

##**********************************************************
## Software License Agreement (BSD License)
##
##  Copyright (c) 2008, Willow Garage, Inc.
##  All rights reserved.
##
##  Redistribution and use in source and binary forms, with or without
##  modification, are permitted provided that the following conditions
##  are met:
##
##   * Redistributions of source code must retain the above copyright
##     notice, this list of conditions and the following disclaimer.
##   * Redistributions in binary form must reproduce the above
##     copyright notice, this list of conditions and the following
##     disclaimer in the documentation and/or other materials provided
##     with the distribution.
##   * Neither the name of the Willow Garage nor the names of its
##     contributors may be used to endorse or promote products derived
##     from this software without specific prior written permission.
##
##  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
##  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
##  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
##  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
##  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
##  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
##  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
##  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
##  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
##  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
##  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
##  POSSIBILITY OF SUCH DAMAGE.
##**********************************************************/

config_description = [{'srcline': 18, 'description': 'Camera number', 'max': 8, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/camnode.cfg', 'name': 'index', 'edit_method': "{'enum_description': 'Choose the camera (not by guid, unfortunately, just by index)', 'enum': [{'srcline': 9, 'description': 'Camera 0', 'srcfile': '../cfg/camnode.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'camera0'}, {'srcline': 10, 'description': 'Camera 1', 'srcfile': '../cfg/camnode.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'camera1'}, {'srcline': 11, 'description': 'Camera 2', 'srcfile': '../cfg/camnode.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'camera2'}, {'srcline': 12, 'description': 'Camera 3', 'srcfile': '../cfg/camnode.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'camera3'}, {'srcline': 13, 'description': 'Camera 4', 'srcfile': '../cfg/camnode.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'camera4'}, {'srcline': 14, 'description': 'Camera 5', 'srcfile': '../cfg/camnode.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'camera5'}, {'srcline': 15, 'description': 'Camera 6', 'srcfile': '../cfg/camnode.cfg', 'cconsttype': 'const int', 'value': 6, 'ctype': 'int', 'type': 'int', 'name': 'camera6'}, {'srcline': 16, 'description': 'Camera 7', 'srcfile': '../cfg/camnode.cfg', 'cconsttype': 'const int', 'value': 7, 'ctype': 'int', 'type': 'int', 'name': 'camera7'}]}", 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 20, 'description': 'Brightness', 'max': 255, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/camnode.cfg', 'name': 'brightness', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 21, 'description': 'Percent multiplication on pixel values', 'max': 740, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/camnode.cfg', 'name': 'gain', 'edit_method': '', 'default': 100, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 22, 'description': 'Exposure time in microseconds', 'max': 1000000, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/camnode.cfg', 'name': 'shutter', 'edit_method': '', 'default': 100, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 24, 'description': 'Trigger framerate', 'max': 200.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '../cfg/camnode.cfg', 'name': 'framerate_trigger', 'edit_method': '', 'default': 20.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 25, 'description': 'Maximum framerate', 'max': 200.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '../cfg/camnode.cfg', 'name': 'framerate_max', 'edit_method': '', 'default': 20.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 26, 'description': 'Threshold for absdiff', 'max': 10.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '../cfg/camnode.cfg', 'name': 'threshold_diff', 'edit_method': '', 'default': 5.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 27, 'description': 'Threshold for clear', 'max': 10.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '../cfg/camnode.cfg', 'name': 'threshold_clear', 'edit_method': '', 'default': 0.3, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 29, 'description': 'Criterion to determine if a pixel is significantly different than the mean', 'max': 20.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '../cfg/camnode.cfg', 'name': 'n_sigma', 'edit_method': '', 'default': 7.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 30, 'description': 'Number of erosions', 'max': 20, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/camnode.cfg', 'name': 'n_erode', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 32, 'description': 'ROI left', 'max': 1920, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/camnode.cfg', 'name': 'roi/left', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 33, 'description': 'ROI top', 'max': 1080, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/camnode.cfg', 'name': 'roi/top', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 34, 'description': 'ROI right', 'max': 1920, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/camnode.cfg', 'name': 'roi/right', 'edit_method': '', 'default': 1023, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 35, 'description': 'ROI bottom', 'max': 1080, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/camnode.cfg', 'name': 'roi/bottom', 'edit_method': '', 'default': 767, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 36, 'description': 'Trigger mode', 'max': 10, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/camnode.cfg', 'name': 'trigger_mode', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 38, 'description': 'Moving Average Background', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '../cfg/camnode.cfg', 'name': 'dynamic_background', 'edit_method': '', 'default': True, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 39, 'description': 'Use cmp', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '../cfg/camnode.cfg', 'name': 'use_cmp', 'edit_method': '', 'default': False, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 41, 'description': 'Convert pixels to red (requires color cameras)', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '../cfg/camnode.cfg', 'name': 'use_color_filter', 'edit_method': '', 'default': False, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 42, 'description': 'Color filter 1', 'max': 255, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/camnode.cfg', 'name': 'color_filter_1', 'edit_method': '', 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 43, 'description': 'Color filter 2', 'max': 255, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/camnode.cfg', 'name': 'color_filter_2', 'edit_method': '', 'default': 150, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 44, 'description': 'Color filter 3', 'max': 255, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/camnode.cfg', 'name': 'color_filter_3', 'edit_method': '', 'default': 255, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 45, 'description': 'Color filter saturation', 'max': 255, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '../cfg/camnode.cfg', 'name': 'color_filter_sat', 'edit_method': '', 'default': 100, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 53, 'description': 'View image', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '../cfg/camnode.cfg', 'name': 'visible_image_view', 'edit_method': "{'enum_description': 'Set the processed image to view', 'enum': [{'srcline': 47, 'description': 'Raw image', 'srcfile': '../cfg/camnode.cfg', 'cconsttype': 'const char * const', 'value': 'raw', 'ctype': 'std::string', 'type': 'str', 'name': 'Raw'}, {'srcline': 48, 'description': 'Absolute difference with background', 'srcfile': '../cfg/camnode.cfg', 'cconsttype': 'const char * const', 'value': 'absdiff', 'ctype': 'std::string', 'type': 'str', 'name': 'AbsDiff'}, {'srcline': 49, 'description': 'Average background', 'srcfile': '../cfg/camnode.cfg', 'cconsttype': 'const char * const', 'value': 'mean', 'ctype': 'std::string', 'type': 'str', 'name': 'Mean'}, {'srcline': 50, 'description': 'Comparison', 'srcfile': '../cfg/camnode.cfg', 'cconsttype': 'const char * const', 'value': 'cmp', 'ctype': 'std::string', 'type': 'str', 'name': 'Cmp'}, {'srcline': 51, 'description': 'Comparison diff', 'srcfile': '../cfg/camnode.cfg', 'cconsttype': 'const char * const', 'value': 'cmpdiff', 'ctype': 'std::string', 'type': 'str', 'name': 'CmpDiff'}]}", 'default': 'raw', 'level': 1, 'min': '', 'type': 'str'}]

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

for param in config_description:
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

Camnode_camera0 = 0
Camnode_camera1 = 1
Camnode_camera2 = 2
Camnode_camera3 = 3
Camnode_camera4 = 4
Camnode_camera5 = 5
Camnode_camera6 = 6
Camnode_camera7 = 7
Camnode_Raw = 'raw'
Camnode_AbsDiff = 'absdiff'
Camnode_Mean = 'mean'
Camnode_Cmp = 'cmp'
Camnode_CmpDiff = 'cmpdiff'
